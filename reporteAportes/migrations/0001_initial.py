# Generated by Django 5.1.1 on 2024-10-01 01:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reporteAcercamientos', '0002_alter_acercamientocooperacion_reporte'),
        ('reporteProgramas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccionArchivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Acción')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoOrdenesJudiciales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_apoyo', models.TextField(max_length=255, verbose_name='Indique el tipo de apoyo que ha recibido de este proyecto / cooperante para el cumplimiento de órdenes judiciales')),
                ('tipo_ordenes', models.TextField(max_length=255, verbose_name='¿Para qué tipo de órdenes judiciales recibió el apoyo?')),
                ('cantidad_sentencias', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Indique, si es posible, para cuántas sentencias ha contribuido el apoyo recibido de este proyecto / cooperante:')),
                ('cantidad_ordenes', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Indique, si es posible, para cuántas órdenes ha contribuido el apoyo recibido de este proyecto / cooperante:')),
            ],
            options={
                'verbose_name': 'Apoyo para el Cumplimiento de Órdenes Judiciales',
                'verbose_name_plural': 'Apoyo para el Cumplimiento de Órdenes Judiciales',
            },
        ),
        migrations.CreateModel(
            name='AreaProfesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Área Profesional')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre del evento')),
            ],
        ),
        migrations.CreateModel(
            name='ObjetivoViaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OtrosApoyos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(max_length=255, verbose_name='Realice una breve descripción de algún otro tipo de apoyo recibido por este proyecto / cooperante, si no pudo registrarlo en las anteriores preguntas:')),
            ],
            options={
                'verbose_name': 'Otros Apoyos',
                'verbose_name_plural': 'Otros Apoyos',
            },
        ),
        migrations.CreateModel(
            name='PublicoObjetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('Beneficiarios,solicitantes,comunidad en general', 'Beneficiarios,solicitantes,comunidad en general'), ('Funcionarios y/o contratistas de la URT', 'Funcionarios y/o contratistas de la URT'), ('Funcionarios y/o contratistas de otras entidades', 'Funcionarios y/o contratistas de otras entidades')], max_length=255, verbose_name='Nombre del público objetivo')),
            ],
        ),
        migrations.CreateModel(
            name='TipoApoyo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Apoyo')),
            ],
        ),
        migrations.CreateModel(
            name='TipoCaso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Caso')),
            ],
        ),
        migrations.CreateModel(
            name='TipoHerramienta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Herramienta / Equipo')),
            ],
        ),
        migrations.CreateModel(
            name='TipoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Material')),
            ],
        ),
        migrations.CreateModel(
            name='TipoPersonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Personal')),
            ],
        ),
        migrations.CreateModel(
            name='TipoProyecto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Tipo de Proyecto')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoArchivoHistorico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuales_acciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales')),
                ('comentarios', models.TextField(max_length=255, verbose_name='¿Qué resaltaría o que comentarios tiene sobre el apoyo recibido para la gestión documental?')),
                ('acciones', models.ManyToManyField(to='reporteAportes.accionarchivo', verbose_name='Indique el tipo de acciones para las cuales ha recibido apoyo')),
            ],
            options={
                'verbose_name': 'Apoyo en Gestión del Archivo Histórico',
                'verbose_name_plural': 'Apoyo en Gestión del Archivo Histórico',
            },
        ),
        migrations.CreateModel(
            name='ApoyoContratacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otro_tipo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Otro, ¿Cúales?')),
                ('objetivo_principal', models.TextField(max_length=255, verbose_name='¿Cuál es el objetivo principal de los contratos del personal con el cual apoya este proyecto / cooperante?')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='¿Qué resaltaría de este apoyo relacionado con la contratación de personal por parte de este cooperante?')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoTerritorios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apoyo_recibido', models.TextField(max_length=255, verbose_name='En qué consistió el apoyo recibido')),
                ('tipo_visitas', models.TextField(max_length=255, verbose_name='Indique para qué tipo de visitas / actividades tuvo el acompañamiento o apoyo en cuanto al acceso')),
                ('cantidad_visitas', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='¿Para cuántas visitas obtuvo apoyo de este cooperante para el acceso a territorios en este periodo?')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='¿Qué resaltaría de este apoyo relacionado con acceso a los territorios por parte de este cooperante?')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
            ],
            options={
                'verbose_name': 'Apoyo a Territorios',
                'verbose_name_plural': 'Apoyo a Territorios',
            },
        ),
        migrations.CreateModel(
            name='ApoyoTerritorioUbicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vereda', models.CharField(blank=True, max_length=255, null=True)),
                ('apoyo_territorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.apoyoterritorios')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteProgramas.departamento')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteProgramas.municipio')),
            ],
        ),
        migrations.AddField(
            model_name='apoyoterritorios',
            name='ubicaciones',
            field=models.ManyToManyField(through='reporteAportes.ApoyoTerritorioUbicacion', to='reporteProgramas.departamento', verbose_name='Departamentos'),
        ),
        migrations.CreateModel(
            name='ContratacionDetalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_personas', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Cantidad de personas')),
                ('tiempo_servicio', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)], verbose_name='Tiempo de servicio en meses')),
                ('apoyo_contratacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.apoyocontratacion')),
                ('area_profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.areaprofesional')),
                ('tipo_personal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.tipopersonal')),
            ],
            options={
                'unique_together': {('apoyo_contratacion', 'tipo_personal', 'area_profesional')},
            },
        ),
        migrations.AddField(
            model_name='apoyocontratacion',
            name='area_profesional',
            field=models.ManyToManyField(through='reporteAportes.ContratacionDetalle', to='reporteAportes.areaprofesional'),
        ),
        migrations.CreateModel(
            name='EstimacionEconomica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_economico', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Si tiene un valor económico del presupuesto destinado desde el proyecto / cooperante para el aporte a su dependencia durante este periodo, por favor indíquelo:')),
                ('moneda', models.CharField(blank=True, max_length=100, null=True, verbose_name='Moneda')),
                ('obtencion_valor', models.TextField(blank=True, null=True, verbose_name='Indique por favor como obtuvo este valor reportado: (Ej: presupuesto aprobado por cooperante, presupuesto ejecutado, costo de personal o materiales, etc.), estimativo según costos de lo entregado, cotizaciones, etc.')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
            ],
            options={
                'verbose_name': 'Estimación Económica',
                'verbose_name_plural': 'Estimaciones Económicas',
            },
        ),
        migrations.CreateModel(
            name='ApoyoViajes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_locales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes locales / regionales')),
                ('cantidad_nacionales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes nacionales')),
                ('cantidad_internacionales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes internacionales')),
                ('suma_viajes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cantidad total de viajes apoyados')),
                ('otros_viajes', models.BooleanField(default=False, verbose_name='Otros')),
                ('cuales_otros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales (si selecciona otros)')),
                ('resaltado_apoyo', models.TextField(max_length=100, verbose_name='¿Qué resaltaría de este apoyo?')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
                ('objetivo_viajes', models.ManyToManyField(blank=True, to='reporteAportes.objetivoviaje')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoEventos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_eventos', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Cantidad de eventos apoyados por este proyecto / cooperante en el período reportado')),
                ('otros_eventos', models.BooleanField(default=False, verbose_name='Otros eventos')),
                ('cuales_eventos', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales')),
                ('objetivo_principal', models.TextField(max_length=255, verbose_name='Objetivo principal de los eventos apoyados')),
                ('otro_publico', models.BooleanField(default=False, verbose_name='Otros públicos')),
                ('cual_publico', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales')),
                ('cantidad_participantes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Cantidad total de participantes en los eventos en este periodo')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
                ('eventos', models.ManyToManyField(to='reporteAportes.evento', verbose_name='Eventos apoyados')),
                ('publico_objetivo', models.ManyToManyField(to='reporteAportes.publicoobjetivo', verbose_name='Público objetivo')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoLitigio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_caso', models.CharField(blank=True, max_length=255, verbose_name='Nombre de los casos')),
                ('cantidad_ids', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Cantidad de IDs')),
                ('otro_tipo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Otro, ¿Cúales?')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='¿Qué resaltaría de este apoyo relacionado con el litigio de casos por parte de este cooperante o, alguna observación al respecto de este tipo de apoyo recibido?')),
                ('tipo_caso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.tipocaso')),
            ],
            options={
                'verbose_name': 'Apoyo en Litigio de Casos',
                'verbose_name_plural': 'Apoyo en Litigio de Casos',
            },
        ),
        migrations.CreateModel(
            name='ApoyoHerramientas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_recibida', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Cantidad recibida')),
                ('descripcion', models.CharField(max_length=255, verbose_name='Descripción')),
                ('observaciones', models.CharField(max_length=255, verbose_name='Observaciones / detalle')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
                ('tipo_herramienta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.tipoherramienta')),
            ],
            options={
                'verbose_name': 'Apoyo de Herramientas',
                'verbose_name_plural': 'Apoyo de Herramientas',
            },
        ),
        migrations.CreateModel(
            name='ApoyoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_material', models.CharField(max_length=255, verbose_name='Título material')),
                ('objetivo_principal', models.TextField(verbose_name='Objetivo principal')),
                ('publico_destinatario', models.CharField(max_length=255, verbose_name='Público destinatario')),
                ('cantidad_originales', models.PositiveIntegerField(verbose_name='Cantidad originales')),
                ('cantidad_reproducciones', models.PositiveIntegerField(verbose_name='Cantidad reproducciones')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='Que resaltaría de este apoyo a través de la producción de materiales')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte', verbose_name='Reporte')),
                ('tipo_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reporteAportes.tipomaterial')),
            ],
            options={
                'verbose_name': 'Apoyo en Producción de Materiales',
                'verbose_name_plural': 'Apoyo en Producción de Materiales',
            },
        ),
        migrations.AddField(
            model_name='apoyocontratacion',
            name='tipo_personal',
            field=models.ManyToManyField(through='reporteAportes.ContratacionDetalle', to='reporteAportes.tipopersonal'),
        ),
        migrations.CreateModel(
            name='ApoyoSeguridadAlimentaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_proyectos', models.PositiveIntegerField(verbose_name='Cantidad proyectos')),
                ('cantidad_familias', models.PositiveIntegerField(verbose_name='Cantidad familias beneficiarias')),
                ('otro_apoyo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cual')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='¿Qué resaltaría de este apoyo relacionado con seguridad alimentaria o proyectos productivos por parte de este proyecto / cooperante?')),
                ('tipo_apoyo', models.ManyToManyField(to='reporteAportes.tipoapoyo', verbose_name='Tipo de apoyo')),
                ('tipo_proyecto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteAportes.tipoproyecto')),
            ],
            options={
                'verbose_name': 'Apoyo a Seguridad Alimentaria',
                'verbose_name_plural': 'Apoyo a Seguridad Alimentaria',
            },
        ),
    ]
