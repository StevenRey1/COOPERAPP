# Generated by Django 5.1.1 on 2024-09-25 15:19

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('reporteAcercamientos', '0001_initial'),
        ('reporteProgramas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre del evento')),
            ],
        ),
        migrations.CreateModel(
            name='ObjetivoViaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PublicoObjetivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('Beneficiarios,solicitantes,comunidad en general', 'Beneficiarios,solicitantes,comunidad en general'), ('Funcionarios y/o contratistas de la URT', 'Funcionarios y/o contratistas de la URT'), ('Funcionarios y/o contratistas de otras entidades', 'Funcionarios y/o contratistas de otras entidades')], max_length=255, verbose_name='Nombre del público objetivo')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoTerritorios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vereda', models.CharField(max_length=255, verbose_name='Vereda / territorio / cabildo')),
                ('apoyo_recibido', models.TextField(max_length=255, verbose_name='En qué consistió el apoyo recibido')),
                ('tipo_visitas', models.TextField(max_length=255, verbose_name='Indique para qué tipo de visitas / actividades tuvo el acompañamiento o apoyo en cuanto al acceso')),
                ('cantidad_visitas', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='¿Para cuántas visitas obtuvo apoyo de este cooperante para el acceso a territorios en este periodo?')),
                ('resaltar_apoyo', models.TextField(max_length=255, verbose_name='¿Qué resaltaría de este apoyo relacionado con acceso a los territorios por parte de este cooperante?')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteProgramas.departamento', verbose_name='Departamento')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reporteProgramas.municipio', verbose_name='Municipio')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte')),
            ],
            options={
                'verbose_name': 'Apoyo a Territorios',
                'verbose_name_plural': 'Apoyo a Territorios',
            },
        ),
        migrations.CreateModel(
            name='ApoyoViajes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_locales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes locales / regionales')),
                ('cantidad_nacionales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes nacionales')),
                ('cantidad_internacionales', models.PositiveIntegerField(default=0, verbose_name='Cantidad de viajes internacionales')),
                ('suma_viajes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cantidad total de viajes apoyados')),
                ('cuales_otros', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales (si selecciona otros)')),
                ('resaltado_apoyo', models.TextField(blank=True, max_length=100, verbose_name='¿Qué resaltaría de este apoyo?')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte')),
                ('objetivo_viajes', models.ManyToManyField(blank=True, to='reporteAportes.objetivoviaje')),
            ],
        ),
        migrations.CreateModel(
            name='ApoyoEventos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_eventos', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Cantidad de eventos apoyados en el periodo reportado')),
                ('otros_eventos', models.BooleanField(default=False, verbose_name='Otros eventos')),
                ('cuales_eventos', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales')),
                ('objetivo_principal', models.TextField(max_length=255, verbose_name='Objetivo principal de los eventos apoyados')),
                ('otro_publico', models.BooleanField(default=False, verbose_name='Otros públicos')),
                ('cual_publico', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cuales')),
                ('cantidad_participantes', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Cantidad total de participantes en los eventos en este periodo')),
                ('reporte', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reporteAcercamientos.reporte')),
                ('eventos', models.ManyToManyField(to='reporteAportes.evento', verbose_name='Eventos apoyados')),
                ('publico_objetivo', models.ManyToManyField(to='reporteAportes.publicoobjetivo', verbose_name='Público objetivo')),
            ],
        ),
    ]
